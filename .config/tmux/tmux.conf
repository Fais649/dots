# plugins -----------------------------------------------------
# ------------------------------------------------------------

set-environment -g PATH "/opt/homebrew/bin:/bin:/usr/bin";
# options -----------------------------------------------------
set -g mouse on
# status style
set -g status-justify centre
set -g status-position top
set -g status-style 'fg=#777777'
setw -g mode-style 'fg=black bg=grey bold'
set -g mode-keys vi
set -g status-keys vi
set-option -g status-interval 5
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'
# all pane style
set -g pane-border-lines single
set -g renumber-windows on
set -g base-index 1
setw -g pane-base-index 1
# inactive pane style
set-window-option -g window-style "fg=grey,dim" # or colour240
set-option -g pane-border-style "fg=grey,dim" # grey, colour240
# active pane style
set-window-option -g window-active-style "fg=white"
set-window-option -g window-status-current-style "fg=black,bg=white"
set-window-option -g window-status-style "fg=#777777"
set-option -g pane-active-border-style "fg=white,bold" # white, colour255
# misc
set-option -g history-limit 5000
setw -g mode-keys vi

# prefix
unbind M-Space
set -g prefix M-Space
bind M-Space send-prefix

# keymap -----------------------------------------------------
bind-key -n C-M-Right swap-window -t +1 \; next-window
bind-key -n C-M-Left swap-window -t -1 \; previous-window

bind-key -n M-Right next-window
bind-key -n M-Left previous-window

bind-key -n M-Enter copy-mode
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind P paste-buffer
bind-key -n M-p paste-buffer
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"


# window management
bind  n new-window -c "#{pane_current_path}"; # new tab at pwd
bind x if-shell -F '#{==:#{window_panes},1}' 'kill-window' 'kill-pane'
bind c new-window -n tmux-config "nvim ~/.config/tmux/tmux.conf"
bind -n M-r command-prompt -I'#W' { rename-window -- '%%' }

# window splitting
bind s split-window -vc "#{pane_current_path}";
bind v split-window -hc "#{pane_current_path}";

# bind b switch-client -T splitter;
# bind -T splitter l split-window -hc "#{pane_current_path}";
# bind -T splitter j split-window -vc "#{pane_current_path}";
# nvim integration 
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'";

# focus pane
bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'select-pane -L';
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'select-pane -D';
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'select-pane -U';
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'select-pane -R';

# resize active pane 
bind -n M-m resize-pane -Z; # zoom tab
bind -n C-M-h resize-pane -L 5
bind -n C-M-j resize-pane -D 5
bind -n C-M-k resize-pane -U 5
bind -n C-M-l resize-pane -R 5

bind r source-file ~/.config/tmux/tmux.conf;

# ------------------------------------------------------------

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
